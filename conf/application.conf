# Copyright 2025 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName=trusts-store

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"

#Trusts bindings
play.modules.enabled += "config.Module"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

# Play Modules
# ~~~~
# Additional play modules can be added here

play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
#application.router=prod.Routes

play.http.router=prod.Routes

mongodb {
    uri = "mongodb://localhost:27017/"${appName}
    claimAttempts {
        # We set it to 30 minutes as the locking is for 30 minutes when a user fails IV
        # This corresponds and resets the UTR acting on for a fresh attempt
        expireAfterSeconds = 1800
    }
    maintainTasks {
        # We set it to 4 hours as the user's answers in maintain are held for 4 hours
        # This is to ensure the user's tasks list tags are correct
        expireAfterSeconds = 14400
    }
    registerTasks {
        # We set it to 28 days as the user's draft is held for 28 days
        # This is to ensure the user's task list tags are correct
        expireAfterSeconds = 2419200
    }
}

microservice {
    services {
        features {
            mongo {
                dropIndexes = true
            }
        }

        auth {
            host=localhost
            port=8500
        }

    }
}

features.5mld = true
